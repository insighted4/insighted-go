// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github_proxy.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetUserRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserRequest) Reset()         { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()    {}
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_github_proxy_1cbd40e85f0d9055, []int{0}
}
func (m *GetUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserRequest.Unmarshal(m, b)
}
func (m *GetUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserRequest.Marshal(b, m, deterministic)
}
func (dst *GetUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserRequest.Merge(dst, src)
}
func (m *GetUserRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserRequest.Size(m)
}
func (m *GetUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserRequest proto.InternalMessageInfo

func (m *GetUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type User struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Login                string   `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Followers            int64    `protobuf:"varint,4,opt,name=followers,proto3" json:"followers,omitempty"`
	Following            int64    `protobuf:"varint,5,opt,name=following,proto3" json:"following,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_github_proxy_1cbd40e85f0d9055, []int{1}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetFollowers() int64 {
	if m != nil {
		return m.Followers
	}
	return 0
}

func (m *User) GetFollowing() int64 {
	if m != nil {
		return m.Following
	}
	return 0
}

func init() {
	proto.RegisterType((*GetUserRequest)(nil), "api.GetUserRequest")
	proto.RegisterType((*User)(nil), "api.User")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GithubProxyClient is the client API for GithubProxy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GithubProxyClient interface {
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error)
}

type githubProxyClient struct {
	cc *grpc.ClientConn
}

func NewGithubProxyClient(cc *grpc.ClientConn) GithubProxyClient {
	return &githubProxyClient{cc}
}

func (c *githubProxyClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/api.GithubProxy/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GithubProxyServer is the server API for GithubProxy service.
type GithubProxyServer interface {
	GetUser(context.Context, *GetUserRequest) (*User, error)
}

func RegisterGithubProxyServer(s *grpc.Server, srv GithubProxyServer) {
	s.RegisterService(&_GithubProxy_serviceDesc, srv)
}

func _GithubProxy_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GithubProxyServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GithubProxy/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GithubProxyServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GithubProxy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.GithubProxy",
	HandlerType: (*GithubProxyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _GithubProxy_GetUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github_proxy.proto",
}

func init() { proto.RegisterFile("github_proxy.proto", fileDescriptor_github_proxy_1cbd40e85f0d9055) }

var fileDescriptor_github_proxy_1cbd40e85f0d9055 = []byte{
	// 193 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0x8a, 0x2f, 0x28, 0xca, 0xaf, 0xa8, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x4e, 0x2c, 0xc8, 0x54, 0x52, 0xe1, 0xe2, 0x73, 0x4f, 0x2d, 0x09, 0x2d, 0x4e, 0x2d, 0x0a, 0x4a,
	0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x54,
	0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95, 0x6a, 0xb8, 0x58, 0x40, 0x4a, 0x84, 0xf8, 0xb8, 0x98,
	0x32, 0x53, 0xc0, 0x32, 0xcc, 0x41, 0x4c, 0x99, 0x29, 0x42, 0x22, 0x5c, 0xac, 0x39, 0xf9, 0xe9,
	0x99, 0x79, 0x12, 0x4c, 0x60, 0xc5, 0x10, 0x0e, 0xdc, 0x04, 0x66, 0x84, 0x09, 0x42, 0x32, 0x5c,
	0x9c, 0x69, 0xf9, 0x39, 0x39, 0xf9, 0xe5, 0xa9, 0x45, 0xc5, 0x12, 0x2c, 0x60, 0x03, 0x10, 0x02,
	0x08, 0xd9, 0xcc, 0xbc, 0x74, 0x09, 0x56, 0x64, 0xd9, 0xcc, 0xbc, 0x74, 0x23, 0x2b, 0x2e, 0x6e,
	0x77, 0xb0, 0xf3, 0x03, 0x40, 0xae, 0x17, 0xd2, 0xe6, 0x62, 0x87, 0x3a, 0x59, 0x48, 0x58, 0x2f,
	0xb1, 0x20, 0x53, 0x0f, 0xd5, 0x03, 0x52, 0x9c, 0x60, 0x41, 0x90, 0x88, 0x12, 0x43, 0x12, 0x1b,
	0xd8, 0xaf, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xda, 0x73, 0x73, 0x26, 0x01, 0x01, 0x00,
	0x00,
}
